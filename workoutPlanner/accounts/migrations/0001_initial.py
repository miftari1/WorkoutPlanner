# Generated by Django 5.1.3 on 2024-12-01 10:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=40, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('image', models.ImageField(default='profile_images/default_profile_image.png', upload_to='profile_images/')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=2)),
                ('age', models.PositiveSmallIntegerField(error_messages={'max_value': 'You must be at most 100 years old.', 'min_value': 'You must be at least 10 years old.'}, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)])),
                ('height', models.FloatField(error_messages='Please provide correct height.', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(250)])),
                ('weight', models.FloatField(error_messages='Weight cannot be negative number.', validators=[django.core.validators.MinValueValidator(0)])),
                ('goal', models.CharField(choices=[('FL', 'Fat Loss'), ('M', 'Maintenance'), ('MG', 'Muscle Gain')], max_length=2)),
                ('activity', models.CharField(choices=[('LA', 'Lightly Active (workouts not often with sedentary job)'), ('MA', 'Moderately Active (workouts often with sedentary job)'), ('VA', 'Very Active (workouts not often with active job)'), ('EA', 'Extremely Active (workouts often with active job)')], max_length=2)),
                ('calories_needed', models.FloatField(blank=True, null=True)),
            ],
        ),
    ]
